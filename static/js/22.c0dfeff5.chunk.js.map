{"version":3,"sources":["listItems.js","innerPages/resources/ResourcesListMain.js","dashboard.js"],"names":["MainListItems","props","getNavStyles","path","mypath","location","pathname","indexOf","console","log","obj","to","this","Fragment","List","className","activeClassName","ListItemIcon","ListItemText","primary","ExpansionPanel","ExpansionPanelSummary","expandIcon","aria-controls","id","ExpansionPanelDetails","ListItem","button","style","borderBottom","Divider","React","Component","withRouter","ResourceList","Loadable","loader","loading","ResourcesListMain","window","innerWidth","Dashboard","handleDrawerOpen","setState","open","handleDrawerClose","state","setOpen","classes","CreateTeam","lazy","TeamListMain","GreenCluster","GCListMain","employeeVerMain","Attendance","DailyAttendance","PointList","Vehicle","DriverMain","LoadMain","VendorRequests","GCListTeam","editGreenCluster","PastAttendance","PastLeaves","routes","exact","sidebar","root","AppBar","position","clsx","appBar","appBarShift","Toolbar","toolbar","IconButton","edge","color","fill","aria-label","onClick","menuButton","menuButtonHidden","Typography","component","variant","noWrap","title","Drawer","paper","drawerPaper","drawerPaperClose","toolbarIcon","content","appBarSpacer","Container","maxWidth","container","heightMax","Grid","spacing","item","xs","md","lg","fallback","map","route","index","history","key","withStyles","theme","display","backgroundColor","fontSize","fontWeight","fontStretch","fontStyle","lineHeight","letterSpacing","textDecoration","minWidth","paddingRight","alignItems","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","width","enteringScreen","breakpoints","down","marginRight","flexGrow","whiteSpace","borderLeft","overflowX","up","height","overflow","paddingTop","paddingBottom","flexDirection","textAlign","flex","fixedHeight"],"mappings":"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","file":"static/js/22.c0dfeff5.chunk.js","sourcesContent":["import React from 'react';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport PeopleIcon from '@material-ui/icons/People';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport List from '@material-ui/core/List';\nimport Divider from '@material-ui/core/Divider';\nimport WorkOffIcon from '@material-ui/icons/WorkOff';\nimport GroupAddIcon from '@material-ui/icons/GroupAdd';\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport PropTypes from 'prop-types';\nimport {\n  withRouter, NavLink,\n} from \"react-router-dom\";\nimport { Link, IndexLink } from 'react-router'\n\n\n\n\nclass MainListItems extends React.Component {\n  constructor(props) {\n    super(props);\n\n  }\n  static propTypes = {\n    match: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired\n  }\n\n  setActive(obj) {\n    console.log(obj.props.to)\n  }\n\n  // dont use setState in constructor, initialize state instead\n  getNavStyles = (path) => {\n    var mypath = this.props.location.pathname;\n\n    if (typeof path == \"object\") {\n      if (path.indexOf(mypath) !== -1) {\n        console.log(mypath === path ? 'active-nav-link-main' : ' '+ \"here\");\n        return \"active-nav-link-main\";\n\n      } else {\n        console.log(mypath+ \"there\");\n        return mypath === path ? 'active-nav-link-main' : ' ';\n      }\n    }\n    else {\n      return this.props.location.pathname === path ? 'active-nav-link-main' : ' ';\n    }\n\n  }\n  render() {\n\n\n    const { location } = this.props\n    var currentActive = location.pathname === this.props.to;\n    var classNameA = currentActive ? 'active-nav-link' : '';\n\n\n    return (\n      <React.Fragment>\n\n        <List className={this.getNavStyles([\"/dashboard/GCListTeam/\",\"/dashboard/GCListTeam\"]) + \" single-link \"} >\n           <NavLink to=\"/dashboard/GCListTeam/\" activeClassName=\"active-nav-link\"  >\n          <ListItemIcon>\n            <DashboardIcon />\n          </ListItemIcon>\n\n         \n          <ListItemText primary=\"GREEN CLUSTERS\" />\n          </NavLink>\n        </List>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            className={this.getNavStyles([\"/dashboard/Attendance/\", \"/dashboard/Leave_Requests/\",\"/dashboard/CreateTeam/\", \"/dashboard/Teams/\", \"/dashboard/EmployeeVerification\"]) + \" single-link \"}\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel2a-content\"\n            id=\"panel2a-header\"\n          >\n \n           <NavLink to=\"/dashboard/Attendance/\" activeClassName=\"active-nav-link\"  >\n          <ListItemIcon>\n            <DashboardIcon />\n          </ListItemIcon>\n\n         \n          <ListItemText className={\"primary-heading\"} primary=\"ATTENDANCE\" />\n          </NavLink>\n         \n          \n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <List>\n\n              <ListItem button>\n                <NavLink to=\"/dashboard/CreateTeam/\" activeClassName=\"active-nav-link\"  >\n                  <ListItemIcon>\n                    <GroupAddIcon />\n                  </ListItemIcon>\n                  <ListItemText className={\"inset-heading\"} primary=\"Create Team\" />\n                </NavLink>\n              </ListItem>\n              <ListItem button  >\n                <NavLink to=\"/dashboard/Teams/\" activeClassName=\"active-nav-link\" >\n                  <ListItemIcon>\n                    <PeopleIcon />\n                  </ListItemIcon>\n                  <ListItemText className={\"inset-heading\"} primary=\"View Team\" />\n                </NavLink>\n              </ListItem>\n              <ListItem button  >\n                <NavLink to=\"/dashboard/EmployeeVerification\" activeClassName=\"active-nav-link\" >\n                  <ListItemIcon>\n                    <VerifiedUserIcon />\n                  </ListItemIcon>\n                  <ListItemText className={\"inset-heading\"} primary=\"Employee Verification\" />\n                </NavLink>\n              </ListItem>\n              <ListItem button  >\n                <NavLink to=\"/dashboard/Leave_Requests/\" activeClassName=\"active-nav-link\" >\n                  <ListItemIcon>\n                    <WorkOffIcon />\n                  </ListItemIcon>\n                  <ListItemText className={\"inset-heading\"} primary=\"Leave Requests\" />\n                </NavLink>\n              </ListItem>\n              <ListItem button  >\n                <NavLink to=\"/dashboard/Attendance/\" activeClassName=\"active-nav-link\" >\n                  <ListItemIcon>\n                    <AssignmentTurnedInIcon />\n                  </ListItemIcon>\n                  <ListItemText className={\"inset-heading\"} primary=\"Employee Attendance\" />\n                </NavLink>\n              </ListItem>\n\n\n            </List>\n\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            className={\"primary-heading\"}\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel3a-content\"\n            id=\"panel3a-header\"\n          >\n            <ListItemIcon>\n              <DashboardIcon />\n            </ListItemIcon>\n\n            <ListItemText className={\"primary-heading\"} primary=\"P0INTS\" />\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <List>\n\n              <ListItem button>\n                <NavLink to=\"/dashboard/PointList/\" activeClassName=\"active-nav-link\"  >\n                  <ListItemIcon>\n                    <AccountBalanceWalletIcon />\n                  </ListItemIcon>\n                  <ListItemText className={\"inset-heading\"} primary=\"View Points\" />\n                </NavLink>\n              </ListItem>\n\n              <ListItem style={{ borderBottom: '1px dashed white' }}>\n\n                <Divider />\n              </ListItem>\n            </List>\n\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            className={\"primary-heading\"}\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel4a-content\"\n            id=\"panel4a-header\"\n          >\n            <ListItemIcon>\n              <DashboardIcon />\n            </ListItemIcon>\n\n            <ListItemText className={\"primary-heading\"} primary=\"RESOURCES\" />\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <List>\n              <ListItem button>\n                <NavLink to=\"/dashboard/vendorRequests/\" activeClassName=\"active-nav-link\"  >\n                  <ListItemIcon>\n                    <AccountBalanceWalletIcon />\n                  </ListItemIcon>\n                  <ListItemText className={\"inset-heading\"} primary=\"Vendor Requests\" />\n                </NavLink>\n              </ListItem>\n              <ListItem button>\n                <NavLink to=\"/dashboard/ResourcesList/\" activeClassName=\"active-nav-link\"  >\n                  <ListItemIcon>\n                    <AccountBalanceWalletIcon />\n                  </ListItemIcon>\n                  <ListItemText className={\"inset-heading\"} primary=\"Resources\" />\n                </NavLink>\n              </ListItem>\n\n            </List>\n\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n        <ExpansionPanel>\n          <ExpansionPanelSummary\n            className={\"primary-heading\"}\n            expandIcon={<ExpandMoreIcon />}\n            aria-controls=\"panel5a-content\"\n            id=\"panel5a-header\"\n          >\n            <ListItemIcon>\n              <DashboardIcon />\n            </ListItemIcon>\n\n            <ListItemText className={\"primary-heading\"} primary=\"VEHICLE\" />\n          </ExpansionPanelSummary>\n          <ExpansionPanelDetails>\n            <List>\n\n              <ListItem button>\n                <NavLink to=\"/dashboard/vehicle/\" activeClassName=\"active-nav-link\"  >\n                  <ListItemIcon>\n                    <AccountBalanceWalletIcon />\n                  </ListItemIcon>\n                  <ListItemText className={\"inset-heading\"} primary=\"View Vehicles\" />\n                </NavLink>\n              </ListItem>\n              <ListItem button>\n                <NavLink to=\"/dashboard/load/\" activeClassName=\"active-nav-link\"  >\n                  <ListItemIcon>\n                    <AccountBalanceWalletIcon />\n                  </ListItemIcon>\n                  <ListItemText className={\"inset-heading\"} primary=\"Driver Loads\" />\n                </NavLink>\n              </ListItem>\n\n            </List>\n\n          </ExpansionPanelDetails>\n        </ExpansionPanel>\n\n\n      </React.Fragment>\n    )\n  }\n}\n\nexport default withRouter(MainListItems)","import React, { Component }  from 'react';  \r\n \r\nimport   Loadable  from 'react-loadable'; \r\nconst ResourceList = Loadable({\r\n  loader: () => import(\"./ResourcesList\"),\r\n  loading: Loading  \r\n}); \r\n\r\nfunction Loading() {\r\n  return <h3>Loading...</h3>;\r\n}\r\nexport default class ResourcesListMain extends Component  {\r\n  render() {\r\n        let width = window.innerWidth;  \r\n    if (width > 768) {\r\n      return (\r\n       <ResourceList></ResourceList>\r\n       \r\n       );\r\n    } \r\n }\r\n \r\n}\r\n","import React , { Suspense, lazy }  from 'react';\nimport clsx from 'clsx'; \nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton'; \nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'; \nimport  MainListItems   from './listItems';\nimport ResourcesListMain from './innerPages/resources/ResourcesListMain';\nimport { withStyles } from '@material-ui/styles';\nimport {\n \n  Route, Switch, withRouter\n} from \"react-router-dom\"; \n\n\n\nconst drawerWidth = 333;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n    backgroundColor: '#f6f6f6',\n    fontSize: '16px',\n  fontWeight: 500,\n  fontStretch: 'normal' , \n  fontStyle: 'normal' , \n  lineHeight: 'normal' , \n  letterSpacing: 'normal' , \n  color: '#ffffff' , \n    '& a': {\n      color: 'white',\n      textDecoration: 'none',\n      display: 'inline-flex'\n    },\n    '& span': { \n      fontSize: '16px',\n    },\n    '& > svg': {\n      minWidth: '30px',\n    },\n  },\n\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 5px',\n    color: 'white',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    backgroundColor: 'black'\n  },\n\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    [theme.breakpoints.down('sm')]: {\n      marginLeft: '0',\n      width: '0',\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen,\n      }),\n    },\n  },\n  menuButton: {\n    marginRight: 36,\n    color: 'white',\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: 'relative',\n    whiteSpace: 'nowrap',\n    backgroundColor: 'black',\n    color: 'white',\n    width: drawerWidth,\n    borderLeft: 'none',\n    paddingRight: '0',\n    [theme.breakpoints.down('sm')]: {\n      width: '320px',\n    },\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    \"& span \" :{\n      display:'none'\n    },\n    width: theme.spacing(6),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    textAlign: 'center',\n    alignItems: \"stretch\"\n\n  }, \n  heightMax: {\n    display: 'flex',\n    flex: '1',\n    height: '87%'\n  },\n  fixedHeight: {\n    height: '100%', alignItems: \"stretch\"\n  }\n});\n\nclass Dashboard extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      open :true,\n      setOpen: true  \n }\n \n  }\n\n   handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n   handleDrawerClose = () => { \n    this.setState({ open: false });\n  }; \n  render() {\n    const { classes } = this.props;\n \nconst CreateTeam = lazy(() => import('./innerPages/team/createTeam'));\nconst TeamListMain = lazy(() => import('./innerPages/team/teamListMain'));\nconst GreenCluster = lazy(() => import('./innerPages/GreenCluster/createGreenClusters'));\nconst GCListMain = lazy(() => import('./innerPages/GreenCluster/greenClusterListMain'));\nconst employeeVerMain = lazy(() => import('./innerPages/Employees/EmployeeVerification')); \nconst Attendance = lazy(() => import('./innerPages/attendance/attendance'));  \nconst DailyAttendance = lazy(() => import('./innerPages/attendance/daily_attendance'));  \nconst PointList = lazy(() => import('./innerPages/points/pointList'));   \nconst Vehicle = lazy(() => import('./innerPages/vehicle/VehicleMain'));   \nconst DriverMain = lazy(() => import('./innerPages/vehicle/driverMain'));   \nconst LoadMain = lazy(() => import('./innerPages/loads/LoadMain'));     \nconst VendorRequests = lazy(() => import('./innerPages/loads/verdorRequests'));     \nconst GCListTeam = lazy(() => import('./innerPages/GreenCluster/greenClusterListTeam'));      \nconst editGreenCluster = lazy(() => import('./innerPages/GreenCluster/editGreenCluster'));     \n\nconst PastAttendance = lazy(() => import('./innerPages/attendance/past_daily_attendance'));  \nconst PastLeaves = lazy(() => import('./innerPages/attendance/past_leaves'));  \n    const routes = [\n      {\n        id: \"1\",\n        path: \"/dashboard/CreateCluster\",\n        exact: true,\n        sidebar: GreenCluster,\n      },\n      {\n        id: \"2\",\n        path: \"/dashboard/GCListTeam\",\n        exact: true,\n        sidebar: GCListMain,\n      }\n      ,\n      {\n        id: \"3\",\n        path: \"/dashboard/CreateTeam/\",\n        exact: true,\n        sidebar: CreateTeam,\n      },\n      {\n        id: \"3\",\n        path: \"/dashboard/Teams/\",\n        exact: true,\n        sidebar: TeamListMain,\n      }, {\n        id: \"3\",\n        path: \"/dashboard/EmployeeVerification/\",\n        exact: true,\n        sidebar: employeeVerMain,\n      }, {\n        id: \"3\",\n        path: \"/dashboard/Attendance/\",\n        exact: true,\n        sidebar: DailyAttendance,\n      }, {\n        id: \"3\",\n        path: \"/dashboard/Leave_Requests/\",\n        exact: true,\n        sidebar: Attendance,\n      },\n      {\n        id: \"3\",\n        path: \"/dashboard/PointList/\",\n        exact: true,\n        sidebar: PointList,\n      },\n      {\n        id: \"3\",\n        path: \"/dashboard/vehicle/\",\n        exact: true,\n        sidebar: Vehicle,\n      },\n      {\n        id: \"3\",\n        path: \"/dashboard/driver/\",\n        exact: true,\n        sidebar: DriverMain,\n      },\n      {\n        id: \"3\",\n        path: \"/dashboard/load/\",\n        exact: true,\n        sidebar: LoadMain,\n      },\n      {\n         id: \"3\",\n        path: \"/dashboard/vendorRequests/\",\n        exact: true,\n        sidebar: VendorRequests,\n      }, {\n         id: \"3\",\n        path: \"/dashboard/ResourcesList/\",\n        exact: true,\n        sidebar: ResourcesListMain,\n      },\n      {\n        id: \"3\",\n       path: \"/dashboard/GCListTeam/\",\n       exact: true,\n       sidebar: GCListTeam,\n     },\n     {\n      id: \"3\",\n     path: \"/dashboard/editGreenCluster/\",\n     exact: true,\n     sidebar: editGreenCluster,\n   },\n     {\n      id: \"3\",\n     path: \"/dashboard/PastAttendance/\",\n     exact: true,\n     sidebar: PastAttendance,\n   },\n     {\n      id: \"3\",\n     path: \"/dashboard/PastLeaves/\",\n     exact: true,\n     sidebar: PastLeaves,\n   }\n    ];  \n    return (\n      <React.Fragment>\n    <div className={classes.root}>\n     \n      <AppBar position=\"absolute\" className={clsx(classes.appBar, this.state.open &&  classes.appBarShift )}>\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"default\"\n            fill=\"white\"\n            aria-label=\"open drawer\"\n            onClick={this.handleDrawerOpen}\n            className={clsx(classes.menuButton,  this.state.open &&   classes.menuButtonHidden)}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography component=\"h1\" variant=\"h6\" color=\"inherit\" noWrap className={classes.title}>\n         Logo\n          </Typography>\n         <span> Work Organization </span>\n         <span className=\"padding-left-15\">JijoThomas@gmail.com</span>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, (this.state.open == false)  &&  classes.drawerPaperClose),\n        }}\n        open={ this.state.open }\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={this.handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <div id=\"MenuItems\"> <MainListItems  />  </div>\n        <Divider />\n      </Drawer>\n      <main className={classes.content,(this.state.open == false) ?  (classes.content + \" menu_hidden \") : (classes.content + \" menu_shown \")}\n      \n      >\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container, classes.heightMax}>\n          <Grid container spacing={3}>\n            {/* Chart */}\n            <Grid item xs={12} md={12} lg={12}>\n            <Suspense fallback={<div>Loading...</div>}>\n              <Switch>\n                {routes.map((route, index, history) => (\n                  //      <List><MainListItems></MainListItems></List>\n                  // You can render a <Route> in as many places\n                  // as you want in your app. It will render along\n                  // with any other <Route>s that also match the URL.\n                  // So, a sidebar or breadcrumbs or anything else\n                  // that requires you to render multiple things\n                  // in multiple places at the same URL is nothing\n                  // more than multiple <Route>s.\n                  <Route\n                    key={index}\n                    path={route.path}\n                    exact={route.exact}\n                    component={route.sidebar}\n                    history={history}\n                    />\n                ))}\n              </Switch>\n              </Suspense>\n            </Grid>\n\n          </Grid>\n        </Container>\n      </main>\n    </div>\n</React.Fragment>\n    )\n  }\n}  \nexport default withStyles(styles)( withRouter(Dashboard)); "],"sourceRoot":""}