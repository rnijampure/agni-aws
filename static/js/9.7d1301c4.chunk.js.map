{"version":3,"sources":["commonStyles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","dateSelector.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","innerPages/GreenCluster/assignDiver.js","innerPages/GreenCluster/assignTeam.js","innerPages/GreenCluster/editGreenCluster.js"],"names":["useStyles","makeStyles","theme","body","backgroundColor","palette","common","white","MuiButton","fontWeight","fontStretch","fontStyle","lineHeight","textAlign","padding","color","h1","fontSize","marginBottom","paddingBottom","paddingLeft","paddingTop","marginTop","margin","root","width","maxWidth","display","borderRadius","rootOne","background","spacing","boxShadow","closeButton","position","right","top","grey","Dialog","paper","flexDirection","alignItems","flexWrap","avatar","secondary","main","form","submit","button","DialogContent","alignLeft","text","border","borderBottom","styles","minHeight","greenClass","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","prototype","toString","call","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","TypeError","_objectWithoutProperties","source","excluded","key","target","sourceKeys","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","days","DateSelector","props","handleDrawerOpen","setState","open","handleDrawerClose","state","setOpen","theArray","day","index","values","this","handleBlur","pop","console","log","classes","Fragment","map","className","variant","name","determineItemStyle","onClick","e","arrayHelpers","addToSelectedDateList","React","Component","withRouter","_toConsumableArray","arr2","iter","from","DialogTitle","withStyles","children","onClose","other","disableTypography","aria-label","useState","openDriver","useTheme","fullScreen","useMediaQuery","breakpoints","down","useHistory","id","aria-labelledby","component","paddingLeft20","join","primary","orientation","initialValues","driverName","time","onSubmit","setSubmitting","setTimeout","fromValues","JSON","stringify","json","parse","setDriverName","handleChange","validationSchema","Yup","shape","required","min","handleSubmit","noValidate","validateOnBlur","validateOnChange","render","field","error","Boolean","errors","touched","fullWidth","label","autoComplete","autoFocus","onChange","onBlur","helperText","String","msg","type","max","InputLabelProps","shrink","defaultValue","inputProps","step","mdUp","openTeam","teamNumber","alert","editGreenCluster","handleDrawerOpenDriver","obj","driverDetailsSet","GCDetails","GCId","feederTeamDetails","driverDetails","handleDrawerTeamClose","setDriverDetails","item","alignRight","container","xs","sm","style","to","bottomAlignContent","loadMain","topPaper","marginLeft"],"mappings":"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","file":"static/js/9.7d1301c4.chunk.js","sourcesContent":["\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n export const useStyles = makeStyles(theme => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white,\r\n      \r\n      \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\r\n      \r\n      \"fontSize\": 16,\r\n    },\r\n    MuiButton:{\r\n      \"fontSize\": 14,\r\n     \r\n    },\r\n    \".MuiButton-outlinedPrimary\":{\r\n      \"fontSize\": 14,\r\n  fontWeight: '500'  , \r\n  fontStretch: 'normal'  , \r\n  fontStyle: 'normal'  , \r\n  lineHeight: 'normal'  ,  \r\n  textAlign: 'center'  , \r\n  padding:'16px',\r\n  color: '#3a6eff'  , \r\n      \"& span\":{\r\n        \r\n        \"fontSize\": 14,\r\n        }\r\n    },\r\n    h1:{\r\n         fontSize : '24px',\r\n\r\n         \"&.main_heading-text\":{\r\n          color: 'black',\r\n          padding: '16px'  , \r\n           fontSize : '24px',\r\n          textAlign: 'left'  , \r\n          fontWeight: '500'  , \r\n          marginBottom: '0'  ,  \r\n          paddingBottom: '0'  , \r\n          paddingLeft: '0'  , \r\n          paddingTop: '0'  , \r\n    marginTop: '12px'\r\n         }\r\n    },\r\n    \".MuiDivider-root\":{\r\n      backgroundColor: 'rgba(0, 0, 0, 0.14)',\r\n      margin:'0 19px'\r\n    }\r\n  }, \r\n    \r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    backgroundColor: ' ',\r\n    padding: '0',\r\n    display: 'flex',\r\n    \"&:hover\": {\r\n      //you want this to be the same as the backgroundColor above display:'inline-block',\r\n      backgroundColor: \"none\"\r\n    },\r\n    \r\n    \"& .fontSize20 span\":{\r\n      fontSize: '20px'\r\n    },\r\n    \"&:.MuiPaper-rounded\": {\r\n      borderRadius: '8px'\r\n  \r\n    },\r\n  }, \r\n  rootOne: {\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    background: 'none',\r\n    display: 'flex',\r\n    \r\n    margin: theme.spacing(0.5, 0),\r\n    color: '#868686',\r\n     fontSize:'12px!important',\r\n    \"&:hover\": {\r\n      //you want this to be the same as the backgroundColor above display:'inline-block',\r\n      backgroundColor: \"none\"\r\n    },\r\n    boxShadow: 'none',\r\n    \"& li.MuiListItem-root\":{\r\n     \r\n    padding: '0',\r\n    }\r\n\r\n\r\n  },\r\n   closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  Dialog: {\r\n    maxWidth: '800px'\r\n  },\r\n  paper: {\r\n    marginTop: 0,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    flexWrap: 'wrap',\r\n    borderRadius: '8px'\r\n\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 5), width: '100%',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1, 0, 1),\r\n    width: '100%',\r\n    borderRadius: '4px',\r\n    padding: theme.spacing(1, 0, 1),\r\n    \"& span\":{\r\n     fontSize:'14px' \r\n    }\r\n    \r\n  \r\n  },\r\n \r\n    \r\n  DialogContent: {\r\n    flexWrap: 'wrap'\r\n  },\r\n \r\n  \r\n  '& hr': {\r\n    margin: theme.spacing(0, 0.5),\r\n  }, \r\n  alignLeft:{\r\n    textAlign:'left',\r\n       boxShadow:'none'\r\n  },\r\n  paper: {\r\n    width: '100%'\r\n  },\r\n  ListItem: {\r\n    flexWrap: 'wrap',\r\n    \"&:hover\": {\r\n      //you want this to be the same as the backgroundColor above\r\n      backgroundColor: \"none\"\r\n    },\r\n    paddingTop: '0'\r\n  }\r\n  ,\r\n  '& hr': {\r\n    margin: theme.spacing(0, 0.5),\r\n  },\r\n  topPaper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'right',\r\n    color: theme.palette.text.secondary,\r\n    boxShadow: 'none',\r\n    background: 'none'\r\n  }, \r\n\r\n  maxWidth150: {\r\n    maxWidth: '150px'\r\n  }, \r\n    maxWidth30: {\r\n    maxWidth: '30px'\r\n  }, \r\n\r\n  loadMain: {\r\n    marginTop: '0px',\r\n    padding: '0 20px',\r\n    '& paper': {\r\n      boxShadow: 'none',\r\n      borderRadius: '0',\r\n      border: '0',\r\n      borderBottom: '1px solid #f2f2f2'\r\n    }\r\n  } , \r\npaddingLeft20:{\r\n  paddingLeft:'20px'\r\n},\r\ndisplayInlineBlock:{\r\ndisplay:'inline-block'\r\n}\r\n}));\r\n\r\nexport const styles = theme => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white,\r\n      \r\n      \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\r\n      \r\n      \"fontSize\": 16,\r\n    },\r\n    MuiButton:{\r\n      \"fontSize\": 14,\r\n     \r\n    },\r\n    \".MuiButton-outlinedPrimary\":{\r\n      \"fontSize\": 14,\r\n  fontWeight: '500'  , \r\n  fontStretch: 'normal'  , \r\n  fontStyle: 'normal'  , \r\n  lineHeight: 'normal'  ,  \r\n  textAlign: 'center'  , \r\n  padding:'16px',\r\n  color: '#3a6eff'  , \r\n      \"& span\":{\r\n        \r\n        \"fontSize\": 14,\r\n        }\r\n    },\r\n    h1:{\r\n         fontSize : '24px',\r\n\r\n         \"&.main_heading-text\":{\r\n          color: 'black',\r\n          padding: '16px'  , \r\n           fontSize : '24px',\r\n          textAlign: 'left'  , \r\n          fontWeight: '500'  , \r\n          marginBottom: '0'  ,  \r\n          paddingBottom: '0'  , \r\n          paddingLeft: '0'  , \r\n          paddingTop: '0'  , \r\n    marginTop: '12px'\r\n         }\r\n    },\r\n    \".MuiDivider-root\":{\r\n      backgroundColor: 'rgba(0, 0, 0, 0.14)',\r\n      margin:'0 19px',\r\n    },\r\n    \".MuiDivider-vertical\":{\r\n\r\n      minHeight: '56px'\r\n    }\r\n  }, \r\n    \r\n  root: {\r\n    \r\nmarginTop:'4px',\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    backgroundColor: ' ',\r\n    padding: '0',\r\n    display: 'flex',\r\n    \"&:hover\": {\r\n      //you want this to be the same as the backgroundColor above display:'inline-block',\r\n      backgroundColor: \"none\"\r\n    },\r\n    \r\n    \"& .fontSize20 span\":{\r\n      fontSize: '20px'\r\n    },\r\n    \"&:.MuiPaper-rounded\": {\r\n      borderRadius: '8px'\r\n  \r\n    },\r\n  }, \r\n  \r\n  greenClass: {\r\n    color: '#8dc149'\r\n  },\r\n \r\n  rootOne: {\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    background: 'none',\r\n    display: 'flex',\r\n    \r\n    margin: theme.spacing(0.5, 0),\r\n    color: '#868686',\r\n     fontSize:'12px!important',\r\n    \"&:hover\": {\r\n      //you want this to be the same as the backgroundColor above display:'inline-block',\r\n      backgroundColor: \"none\"\r\n    },\r\n    boxShadow: 'none',\r\n    \"& li.MuiListItem-root\":{\r\n     \r\n    padding: '0',\r\n    }\r\n\r\n\r\n  },\r\n   closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  Dialog: {\r\n    maxWidth: '800px'\r\n  },\r\n  paper: {\r\n    marginTop: 0,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    flexWrap: 'wrap',\r\n    borderRadius: '8px',\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 5), width: '100%',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1, 0, 1),\r\n    width: '100%',\r\n    borderRadius: '4px',\r\n    padding: theme.spacing(1, 0, 1),\r\n    \"& span\":{\r\n     fontSize:'14px' \r\n    }\r\n    \r\n  \r\n  },\r\n \r\n    \r\n  DialogContent: {\r\n    flexWrap: 'wrap'\r\n  },\r\n \r\n  \r\n  '& hr': {\r\n    margin: theme.spacing(0, 0.5),\r\n  }, \r\n  alignLeft:{\r\n    textAlign:'left',\r\n       boxShadow:'none'\r\n  },\r\n  paper: {\r\n    width: '100%'\r\n  },\r\n  ListItem: {\r\n    flexWrap: 'wrap',\r\n    \"&:hover\": {\r\n      //you want this to be the same as the backgroundColor above\r\n      backgroundColor: \"none\"\r\n    },\r\n    paddingTop: '0'\r\n  }\r\n  ,\r\n  '& hr': {\r\n    margin: theme.spacing(0, 0.5),\r\n  },\r\n  topPaper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'right',\r\n    color: theme.palette.text.secondary,\r\n    boxShadow: 'none',\r\n    background: 'none'\r\n  }, \r\n\r\n  maxWidth150: {\r\n    maxWidth: '150px'\r\n  }, \r\n    maxWidth30: {\r\n    maxWidth: '30px'\r\n  }, \r\n\r\n  nobackground:{\r\n      \r\n    background: 'none',\r\n    boxShadow: 'none',\r\n  },\r\n  loadMain: {\r\n    marginTop: '0px',\r\n    padding: '0 20px',\r\n    '& paper': {\r\n      boxShadow: 'none',\r\n      borderRadius: '0',\r\n      border: '0',\r\n      borderBottom: '1px solid #f2f2f2'\r\n    }\r\n  } \r\n}) ","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (!(Symbol.iterator in Object(arr) || Object.prototype.toString.call(arr) === \"[object Arguments]\")) {\n    return;\n  }\n\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\n \r\nimport { withRouter } from 'react-router-dom';\r\n \r\n\r\nconst days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\nclass DateSelector extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            open: false,\r\n            setOpen: false,\r\n            theArray: [],\r\n        }\r\n\r\n        //const [value, selectedDay] = React.useState(' ');\r\n        //   const [theArray, setTheArray] = React.useState([]);\r\n    }\r\n\r\n\r\n    addToSelectedDateList(day, index, values ) {\r\n        //this.props.validate(values)\r\n        this.props.handleBlur(values)\r\n \r\n        if (this.props.props.values.days.indexOf(day) < 0) { \r\n            this.props.props.values.days.push(day);\r\n            this.state.theArray.push(index);\r\n            this.setState({\r\n                theArray: this.state.theArray\r\n            })\r\n       \r\n        \r\n            //  setTheArray([...theArray, index]);   \r\n        }\r\n        else {\r\n            this.props.props.values.days.pop(day);\r\n            this.state.theArray.pop(index);\r\n            this.setState({\r\n                theArray: this.state.theArray,\r\n            })\r\n            //   \r\n           // console.log(this.state.theArray)\r\n            //   setTheArray(theArray.splice(index,1));  \r\n\r\n            //  \r\n            //  selectedDay(value => index); \r\n\r\n        }\r\n\r\n\r\n    };\r\n    handleDrawerOpen = () => {\r\n        this.setState({ open: true });\r\n    };\r\n    handleDrawerClose = () => {\r\n        this.setState({ open: false });\r\n    };\r\n    determineItemStyle(index) {\r\n\r\n        if (this.state.theArray.indexOf(index) > -1) {\r\n            return ` MuiButton-outlinedPrimary ${index}`\r\n        }\r\n        if (this.state.theArray.indexOf(index) >= 0) {\r\n            console.log(this.state.theArray.indexOf(index))\r\n            return 'hompononi'\r\n        }\r\n\r\n    }\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            \r\n\r\n\r\n                <React.Fragment>\r\n                    {\r\n                        days.map((day, index) => (\r\n\r\n                            <div key={index} className={\" displayInlineBlock \"}>\r\n                                <Button variant=\"outlined\" name=\"day\" className={this.determineItemStyle(index)} onClick={(e, values, arrayHelpers) => this.addToSelectedDateList(day, index,   values)}  >{day}</Button>\r\n                            </div>\r\n\r\n                        ))\r\n                    } </React.Fragment>\r\n         \r\n        );\r\n    }\r\n}\r\n\r\n\r\n \r\n\r\nexport default withRouter(DateSelector)","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || nonIterableSpread();\n}","export default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  }\n}","export default function _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport { withRouter } from 'react-router-dom'\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage  } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport DateSelector from '../../dateSelector';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStyles } from '../../commonStyles';\r\nimport './greenCluster.css';\r\n\r\n\r\nfunction Loading() {\r\n  return <h3>Loading...</h3>;\r\n}\r\nconst DialogTitle = withStyles(makeStyles)(props => {\r\n\r\n  let classes = useStyles();\r\n  const { children, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\n\r\nfunction AssignDriver(props) {\r\n  const [openDriver, setOpen] = React.useState(props.props.openDriver);\r\n  console.log(props  )\r\n  const [value, selectedDay] = React.useState(' ');\r\n  const [theArray, setTheArray] = React.useState([]);\r\n  const theme = useTheme(); \r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n\r\n\r\n\r\n\r\n      <Dialog open={openDriver} id=\"assignFeederTeamPopup\" onClose={props.handleDrawerClose} aria-labelledby=\"form-dialog-title\" fullScreen={fullScreen}\r\n      >\r\n        <List component=\"nav\" className={classes.root} aria-label=\"mailbox folders\">\r\n\r\n          <ListItem className={[\" flexWrapParent \" + classes.paddingLeft20].join(' ')} >\r\n            <div className={\" maxWidth84 \"}>\r\n              <ListItemText className={\" fontSize20 \"} primary=\"01\" />\r\n\r\n            </div>\r\n            <Divider orientation=\"vertical\" />\r\n            <div className={\" flexWrapParent \"} >\r\n              <ListItemText primary=\"Locality\" className={\" wrappedListItemTop\"} />\r\n              <ListItemText primary=\"Area\" className={\" wrappedListItem  greyText \"} />\r\n            </div>\r\n          </ListItem>\r\n\r\n\r\n\r\n        </List>\r\n        <Divider />\r\n        <DialogTitle id=\"form-dialog-title\" className={classes.paddingLeft20 + \" padding-bottom-0 \"} onClose={props.handleDrawerClose}>Assign Driver</DialogTitle>\r\n\r\n        <DialogContent>\r\n\r\n        \r\n\r\n          <Formik\r\n            initialValues={{\r\n              driverName: '',\r\n              time: '07:30',\r\n              days : []\r\n            }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n          //    alert(JSON.stringify(values, null, 2));\r\n              setTimeout(() => {\r\n                let fromValues =  JSON.stringify(values, null, 2)\r\n \r\n                const json = JSON.parse(fromValues);\r\n                console.log(json.driverName) \r\n             let setDriverName= json.driverName;\r\n               props.handleDrawerClose(setDriverName);\r\n\r\n\r\n            setOpen(false);\r\n                //  setSubmitting(false);\r\n              },  500);\r\n            //  \r\n\r\n            }}\r\n            handleChange={(values, index) => {\r\n              console.log('this');\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              driverName: Yup.string()\r\n                .required('Please provide a Driver Name') \r\n                .min(2),\r\n              days: Yup.array()\r\n               \r\n                .required(\"Please at least one day\")\r\n                .min(1),\r\n                time: Yup.string()\r\n                .required('Please provide a valid time'),\r\n            })\r\n\r\n\r\n            }\r\n          >\r\n \r\n            {props => {\r\n              const {\r\n                values,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n\r\n              } = props;\r\n              function addToSelectedDateList(day, index, e) {\r\n                  props.handleBlur()\r\n                if (props.values.days.indexOf(day) < 0) {\r\n                  props.values.days.push(day) \r\n                  setTheArray([...theArray, index]);   \r\n                }\r\n                else {\r\n                  props.values.days.pop(day)\r\n                 \r\n                  setTheArray(theArray.splice(index,1));  \r\n                  \r\n              //  \r\n                //  selectedDay(value => index); \r\n                    \r\n                }\r\n\r\n\r\n              };\r\n              function validatedays(props,form) {\r\n                let error;\r\n                console.log(props.errors.days)\r\n                form.errors.days = \" \";\r\n                props.isValidating = true;\r\n              //  if (value.days.length > 0) {\r\n                //   error = 'Nice try!';\r\n                // }\r\n                // return error;\r\n              }\r\n              return (\r\n\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                  <CssBaseline />\r\n                  <div className={classes.paper}>\r\n\r\n                    <form className={classes.form} noValidate onSubmit={handleSubmit} >\r\n                      <Field\r\n                        validateOnBlur\r\n                        validateOnChange\r\n                        name=\"driverName\"\r\n                        render={({ field, form }) => (\r\n\r\n                          <TextField\r\n                            error={\r\n                              Boolean(form.errors.driverName && form.touched.driverName)\r\n                            }\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"driverName\"\r\n                            label=\"Enter Driver Name\"\r\n                            name=\"driverName\"\r\n                            autoComplete=\"driverName\"\r\n                            autoFocus\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={\" margin-top-0 \"}\r\n                            helperText={\r\n                              form.errors.driverName &&\r\n                              form.touched.driverName &&\r\n                              String(form.errors.driverName)\r\n                            }\r\n                          />\r\n                        )}\r\n                      />\r\n                      <DialogTitle id=\"form-dialog-title\" className={\" padding-bottom-0 padding-left-0\"} onClose={props.handleDrawerClose}>Day</DialogTitle>\r\n\r\n                      <div>\r\n\r\n                        <FieldArray\r\n                          name=\"days\"\r\n                          render={({ arrayHelpers,form,  }) => (\r\n                            <React.Fragment>   <ErrorMessage name=\"days\"  >\r\n                             {msg => <p className={\" MuiFormHelperText-root MuiFormHelperText-contained Mui-error Mui-required  MuiFormHelperText-root \"} id=\"days-helper-text\">\r\n                             {msg}</p>  }</ErrorMessage>\r\n                         \r\n                              <DateSelector props={props}  handleBlur={() => handleBlur(props,form)}  />\r\n                             </React.Fragment> \r\n                          \r\n                          )}\r\n                        />\r\n          \r\n                      </div>\r\n                      <DialogTitle id=\"form-dialog-title\" className={\" padding-bottom-0 padding-left-0\"} onClose={props.handleDrawerClose}>Time</DialogTitle>\r\n\r\n                      <Field\r\n                        validateOnBlur\r\n                        validateOnChange\r\n                        name=\"time\"\r\n                        render={({ field, form }) => (\r\n                          <TextField\r\n                            error={\r\n                              Boolean(form.errors.time && form.touched.time)\r\n                            }\r\n                            margin=\"normal\"\r\n                            id=\"time\"\r\n                            fullWidth\r\n                            name=\"time\"\r\n                            label=\"Time\"\r\n                            type=\"time\"\r\n                            autoComplete=\"current-area\"\r\n                            onChange={handleChange}\r\n                            min=\"07:00\" max=\"18:00\" \r\n                            variant=\"outlined\"\r\n                            onBlur={handleBlur}\r\n                            InputLabelProps={{\r\n                              shrink: true,\r\n                            }}\r\n                            defaultValue=\"07:30\" \r\n                            inputProps={{\r\n                              step: 300, // 5 min\r\n                            }}\r\n                            helperText={\r\n                              form.errors.time &&\r\n                              form.touched.time &&\r\n                              String(form.errors.time)\r\n                            }\r\n                          />\r\n                        )}\r\n                      />\r\n\r\n\r\n\r\n\r\n                      <DialogActions>\r\n\r\n                        <Button\r\n                          type=\"submit\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className={classes.submit}\r\n                        >\r\n                          ASSIGN\r\n     </Button>\r\n                        <Hidden mdUp>\r\n                          <Button\r\n                            type=\"button\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            onClick={props.handleDrawerClose}\r\n                          >\r\n                            CANCEL\r\n     </Button>\r\n                        </Hidden>\r\n                      </DialogActions>   </form>\r\n                  </div>\r\n                </Container>\r\n              );\r\n            }}\r\n\r\n          </Formik>\r\n        </DialogContent>\r\n\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(AssignDriver)","import React, { useState } from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport { withRouter } from 'react-router-dom'\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage  } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport DateSelector from '../../dateSelector';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useStyles } from '../../commonStyles';\r\nimport './greenCluster.css';\r\n\r\n\r\nfunction Loading() {\r\n  return <h3>Loading...</h3>;\r\n}\r\nconst DialogTitle = withStyles(makeStyles)(props => {\r\n\r\n  let classes = useStyles();\r\n  const { children, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\n\r\nfunction AssignFeederTeams(props) {\r\n  console.log(props.open);\r\n  const [openTeam, setOpen] = React.useState(props.open);\r\n  const [value, selectedDay] = React.useState(' ');\r\n  const [theArray, setTheArray] = React.useState([]);\r\n  const theme = useTheme(); \r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n//console.log(props)\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  return (\r\n    <div>\r\n\r\n\r\n\r\n\r\n      <Dialog open={openTeam} id=\"assignFeederTeamPopup\" onClose={props.handleDrawerClose} aria-labelledby=\"form-dialog-title\" fullScreen={fullScreen}\r\n      >\r\n        <List component=\"nav\" className={classes.root} aria-label=\"mailbox folders\">\r\n\r\n          <ListItem className={[\" flexWrapParent \" + classes.paddingLeft20].join(' ')} >\r\n            <div className={\" maxWidth84 \"}>\r\n              <ListItemText className={\" fontSize20 \"} primary=\"01\" />\r\n\r\n            </div>\r\n            <Divider orientation=\"vertical\" />\r\n            <div className={\" flexWrapParent \"} >\r\n              <ListItemText primary=\"Locality\" className={\" wrappedListItemTop\"} />\r\n              <ListItemText primary=\"Area\" className={\" wrappedListItem  greyText \"} />\r\n            </div>\r\n          </ListItem>\r\n\r\n\r\n\r\n        </List>\r\n        <Divider />\r\n        <DialogTitle id=\"form-dialog-title\" className={classes.paddingLeft20 + \" padding-bottom-0 \"} onClose={props.handleDrawerClose}>Assign Feeder Team</DialogTitle>\r\n\r\n        <DialogContent>\r\n\r\n        \r\n\r\n          <Formik\r\n            initialValues={{\r\n              teamNumber: '',\r\n              time: '07:30',\r\n              days : []\r\n            }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n\r\n              alert(JSON.stringify(values, null, 2));\r\n              setTimeout(() => {\r\n                setOpen(false);\r\n                let fromValues =  JSON.stringify(values, null, 2)\r\n \r\n                const json = JSON.parse(fromValues);\r\n            console.log(json) \r\n             let setDriverName= json;\r\n            //   props.handleDrawerTeamClose(setDriverName);\r\n     //           var FeederValues = \r\n               // props.match.params = JSON.stringify(values, null, 2);\r\n                //console.log( props.match.params)\r\n             //   props.feederTeamData = JSON.stringify(values, null, 2);\r\n        //        feederTeamData(JSON.stringify(values, null, 2)) \r\n             //   history.push(\"/dashboard/GreenClusters/\")\r\n                //  history.push({\r\n                //   pathname: '/dashboard/GCListTeam/', \r\n                //   state: { \r\n                //     FeederValues: JSON.stringify(values, null, 2) }\r\n               \r\n\r\n\r\n\r\n                //  setSubmitting(false);\r\n              }, 500);\r\n            }}\r\n            handleChange={(values, index) => {\r\n              console.log('this');\r\n            }}\r\n            validationSchema={Yup.object().shape({\r\n              teamNumber: Yup.string()\r\n                .required('Please provide a greencluster number'),\r\n              days: Yup.array()\r\n               \r\n                .required(\"Please at least one day\")\r\n                .min(1),\r\n                time: Yup.string()\r\n                .required('Please provide a valid time'),\r\n            })\r\n\r\n\r\n            }\r\n          >\r\n \r\n            {props => {\r\n              const {\r\n                values,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n\r\n              } = props;\r\n              function addToSelectedDateList(day, index, e) {\r\n                  props.handleBlur()\r\n                if (props.values.days.indexOf(day) < 0) {\r\n                  props.values.days.push(day) \r\n                  setTheArray([...theArray, index]);   \r\n                }\r\n                else {\r\n                  props.values.days.pop(day)\r\n                 \r\n                  setTheArray(theArray.splice(index,1));  \r\n                  \r\n              //  \r\n                //  selectedDay(value => index); \r\n                    \r\n                }\r\n\r\n\r\n              };\r\n              function validatedays(props,form) {\r\n                let error;\r\n                console.log(props.errors.days)\r\n                form.errors.days = \" \";\r\n                props.isValidating = true;\r\n              //  if (value.days.length > 0) {\r\n                //   error = 'Nice try!';\r\n                // }\r\n                // return error;\r\n              }\r\n              return (\r\n\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                  <CssBaseline />\r\n                  <div className={classes.paper}>\r\n\r\n                    <form className={classes.form} noValidate onSubmit={handleSubmit} >\r\n                      <Field\r\n                        validateOnBlur\r\n                        validateOnChange\r\n                        name=\"teamNumber\"\r\n                        render={({ field, form }) => (\r\n\r\n                          <TextField\r\n                            error={\r\n                              Boolean(form.errors.teamNumber && form.touched.teamNumber)\r\n                            }\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"teamNumber\"\r\n                            label=\"Enter Team Number\"\r\n                            name=\"teamNumber\"\r\n                            autoComplete=\"teamNumber\"\r\n                            autoFocus\r\n                            variant=\"outlined\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            className={\" margin-top-0 \"}\r\n                            helperText={\r\n                              form.errors.teamNumber &&\r\n                              form.touched.teamNumber &&\r\n                              String(form.errors.teamNumber)\r\n                            }\r\n                          />\r\n                        )}\r\n                      />\r\n                      <DialogTitle id=\"form-dialog-title\" className={\" padding-bottom-0 padding-left-0\"} onClose={props.handleDrawerClose}>Day</DialogTitle>\r\n\r\n                      <div>\r\n\r\n                        <FieldArray\r\n                          name=\"days\"\r\n                          render={({ arrayHelpers,form,  }) => (\r\n                            <React.Fragment>   <ErrorMessage name=\"days\"  >\r\n                             {msg => <p className={\" MuiFormHelperText-root MuiFormHelperText-contained Mui-error Mui-required  MuiFormHelperText-root \"} id=\"days-helper-text\">\r\n                             {msg}</p>  }</ErrorMessage>\r\n                         \r\n                              <DateSelector props={props}  handleBlur={() => handleBlur(props,form)}  />\r\n                             </React.Fragment> \r\n                          \r\n                          )}\r\n                        />\r\n          \r\n                      </div>\r\n                      <DialogTitle id=\"form-dialog-title\" className={\" padding-bottom-0 padding-left-0\"} onClose={props.handleDrawerClose}>Time</DialogTitle>\r\n\r\n                      <Field\r\n                        validateOnBlur\r\n                        validateOnChange\r\n                        name=\"time\"\r\n                        render={({ field, form }) => (\r\n                          <TextField\r\n                            error={\r\n                              Boolean(form.errors.time && form.touched.time)\r\n                            }\r\n                            margin=\"normal\"\r\n                            id=\"time\"\r\n                            fullWidth\r\n                            name=\"time\"\r\n                            label=\"Time\"\r\n                            type=\"time\"\r\n                            autoComplete=\"current-area\"\r\n                            onChange={handleChange}\r\n                            min=\"07:00\" max=\"18:00\" \r\n                            variant=\"outlined\"\r\n                            onBlur={handleBlur}\r\n                            InputLabelProps={{\r\n                              shrink: true,\r\n                            }}\r\n                            defaultValue=\"07:30\" \r\n                            inputProps={{\r\n                              step: 300, // 5 min\r\n                            }}\r\n                            helperText={\r\n                              form.errors.time &&\r\n                              form.touched.time &&\r\n                              String(form.errors.time)\r\n                            }\r\n                          />\r\n                        )}\r\n                      />\r\n\r\n\r\n\r\n\r\n                      <DialogActions>\r\n\r\n                        <Button\r\n                          type=\"submit\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className={classes.submit}\r\n                        >\r\n                          ASSIGN\r\n     </Button>\r\n                        <Hidden mdUp>\r\n                          <Button\r\n                            type=\"button\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            onClick={props.handleDrawerClose}\r\n                          >\r\n                            CANCEL\r\n     </Button>\r\n                        </Hidden>\r\n                      </DialogActions>   </form>\r\n                  </div>\r\n                </Container>\r\n              );\r\n            }}\r\n\r\n          </Formik>\r\n        </DialogContent>\r\n\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(AssignFeederTeams)","import React  from 'react'; \r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { Paper } from '@material-ui/core';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/styles';\r\nimport {styles} from '../../commonStyles.js';\r\nimport  AssignDriver  from './assignDiver';\r\nimport  AssignFeederTeams  from './assignTeam';\r\nimport './greenCluster.css';\r\n\r\nimport DateSelector from '../../dateSelector';\r\nimport {\r\n \r\n  Route, Switch, withRouter, NavLink,\r\n} from \"react-router-dom\"; \r\n \r\nclass editGreenCluster extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      openTeam :false,\r\n      openDriver :false,\r\n      setOpen: false,\r\n      theArray:[],\r\n      GCDetails:{\r\n          feederTeamDetails: \" \",\r\n          driverDetails:{\r\n          driverName: 'hell',\r\n              }\r\n      },\r\n      driverDetailsSet: false, \r\n } \r\n \r\n  }\r\n\r\n  handleDrawerOpen = () => { \r\n   this.setState({ openTeam: true, \r\n     openDriver :false,\r\n    });\r\n };\r\n handleDrawerOpenDriver = () => {\r\n   this.setState({ openDriver: true });\r\n };\r\n editGreenCluster = () => { \r\n   console.log('s');\r\n };\r\n  handleDrawerClose = (obj) => { \r\n   this.setState({  \r\n     openTeam :false,\r\n     openDriver :false,\r\n     driverDetailsSet: true,\r\n     GCDetails:{\r\n       GCId:1,\r\n       feederTeamDetails: {},\r\n       driverDetails:{\r\n       driverName: \"Driver Name\",\r\n                } \r\n     } \r\n   });\r\n \r\n \r\n }; \r\n \r\n\r\n addToSelectedDateList(day, index, values ) {\r\n  //this.props.validate(values)\r\n  //this.props.handleBlur(values)\r\n\r\n  // if (this.props.props.values.days.indexOf(day) < 0) { \r\n  //     this.props.props.values.days.push(day);\r\n  //     this.state.theArray.push(index);\r\n  //     this.setState({\r\n  //         theArray: this.state.theArray\r\n  //     })\r\n \r\n  \r\n  //     //  setTheArray([...theArray, index]);   \r\n  // }\r\n  // else {\r\n  //     this.props.props.values.days.pop(day);\r\n  //     this.state.theArray.pop(index);\r\n  //     this.setState({\r\n  //         theArray: this.state.theArray,\r\n  //     })\r\n      //   \r\n     // console.log(this.state.theArray)\r\n      //   setTheArray(theArray.splice(index,1));  \r\n\r\n      //  \r\n      //  selectedDay(value => index); \r\n\r\n  //}\r\n\r\n\r\n};\r\n\r\ndetermineItemStyle = (index) => {\r\n\r\n  if (this.state.theArray.indexOf(index) > -1) {\r\n      return ` MuiButton-outlinedPrimary ${index}`\r\n  }\r\n  if (this.state.theArray.indexOf(index) >= 0) {\r\n      console.log(this.state.theArray.indexOf(index))\r\n      return 'hompononi'\r\n  }\r\n\r\n}\r\n handleDrawerTeamClose = (obj) => { \r\n   this.setState({ \r\n     open: false , \r\n     openTeam :false, \r\n     GCDetails:{\r\n       feederTeamDetails:   obj\r\n     },  \r\n     \r\n     theArray: [],\r\n   });\r\n  \r\n }; \r\n setDriverDetails = (obj ) => { \r\n   this.setState({  \r\n     driverDetailsSet: obj || \"ramu\"\r\n   });\r\n }\r\n  render() {\r\n    const { classes } = this.props;\r\n  \r\nconst days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\r\n\r\n  const teamList = [1, 2, 3];\r\n  const listItems = teamList.map(function (item) {\r\n    return (\r\n\r\n      <div key={item}>\r\n\r\n        <Paper className={classes.root}>\r\n          <List component=\"nav\" className={classes.root} aria-label=\"mailbox folders\">\r\n          <ListItem   className={\" flexWrapParent \" } > \r\n          <div   className={ \" maxWidth84 \"}>\r\n            <ListItemText  className={ \" fontSize20 \"} primary=\"01\" />\r\n\r\n          </div>\r\n            <Divider orientation=\"vertical\" /> \r\n          <div   className={\" flexWrapParent \" } > \r\n            <ListItemText primary=\"Locality\"  className={ \" wrappedListItemTop\"} />\r\n            <ListItemText primary=\"Area\"   className={\" wrappedListItem  greyText \"} />\r\n            </div>\r\n          </ListItem>\r\n\r\n\r\n            <ListItem className={ \"  flexWrapParent \"}  >\r\n\r\n              <ListItemText primary=\"Team Number\" className={ \" wrappedListItemTop \"} />\r\n              <ListItemText primary=\"Leader Name\" className={ \" wrappedListItemBigger  \"} />\r\n            </ListItem>\r\n\r\n            <ListItem className={classes.alignRight} >\r\n\r\n              <ListItemText primary=\"2220 Pts\" />\r\n            </ListItem>\r\n          </List>\r\n\r\n        </Paper>\r\n\r\n        <div  className={\" heightOne \"} >\r\n          &nbsp;\r\n    </div>\r\n      </div>\r\n    );\r\n  })\r\n  return (\r\n\r\n    <React.Fragment>\r\n\r\n      <div  className={\" gridParent\"}>\r\n\r\n        <Grid container spacing={3} >\r\n\r\n          <Grid item xs={12} sm={12} style={{paddingBottom:'0'}}>\r\n          <NavLink to=\"/dashboard/GCListTeam/\" className ={ \" backButton \"}>\r\n            <Typography>Back</Typography> \r\n      </NavLink>\r\n       </Grid>\r\n          <Grid item xs={12} sm={12} className={[classes.alignRight, classes.bottomAlignContent].join(' ')}>\r\n            <Typography> </Typography>\r\n          </Grid>\r\n\r\n        </Grid>\r\n\r\n      </div>\r\n      <Paper className={classes.loadMain}  id=\"edit-green-cluster\" >\r\n        <div  className={\" gridParent  border-bottom-gery\"} >\r\n          <Grid container spacing={3} className={\" border-bottom-grey \"}>\r\n\r\n            <Grid item xs={12} sm={6}>\r\n            <ListItem   className={\" flexWrapParent \" } > \r\n          <div   className={ \" maxWidth84 \"}>\r\n            <ListItemText  className={ \" fontSize20 \"} primary=\"01\" />\r\n\r\n          </div>\r\n            <Divider orientation=\"vertical\" /> \r\n          <div   className={\" flexWrapParent \" } > \r\n            <ListItemText primary=\"Locality\"  className={ \" wrappedListItemTop\"} />\r\n            <ListItemText primary=\"Area\"   className={\" wrappedListItem  greyText \"} />\r\n            </div>\r\n          </ListItem> </Grid>\r\n            <Grid item xs={12} sm={6} className={classes.alignRight}>\r\n            \r\n            </Grid>\r\n\r\n          </Grid>\r\n\r\n        </div>\r\n        <div  className={\" gridParent  border-bottom-gery\"} >\r\n          <Grid container spacing={3} className={\" border-bottom-grey \"}>\r\n\r\n            <Grid item xs={12} sm={6}  className={\" padding-top-0\" } >\r\n            <ListItem   className={\" flexWrapParent padding-top-0\" } > \r\n            <ListItemText primary=\"Feeder Team\"   className={\"headerText margin-bottom-ten greyText \"} />\r\n          <div   className={\" flexWrapParent \" } > \r\n            <ListItemText primary=\"Locality\"  className={ \" wrappedListItemTop\"} />\r\n            <ListItemText primary=\"Area\"   className={\" wrappedListItem  greyText \"} />\r\n            </div>\r\n          </ListItem> </Grid>\r\n            <Grid item xs={12} sm={6} className={  \"alignRight centerAlignContent\"}>\r\n              \r\n            <Button variant=\"outlined\" color=\"primary\" className={classes.button + \" min-width-150 maxWidth150\"}   onClick={e => this.handleDrawerOpen(e )}  >\r\n                       ASSIGN TEAM \r\n               </Button>\r\n            </Grid>\r\n\r\n          </Grid>\r\n\r\n        </div>\r\n        <div  className={\" gridParent  border-bottom-gery \"} >\r\n          <Grid container spacing={3} className={\" border-bottom-grey \"}>\r\n\r\n            <Grid item xs={12}   className={\" padding-top-0\" } >\r\n            <ListItem   className={\" flexWrapParent \" } > \r\n            <ListItemText primary=\"Day\"   className={\"headerText margin-bottom-ten greyText \"} />\r\n          <div  id=\"editGreenCluster\" > \r\n          {\r\n                        days.map((day, index) => (\r\n\r\n                            <div key={index} className={\" displayInlineBlock \"}>\r\n                                <Button variant=\"outlined\" name=\"day\" className={this.determineItemStyle(index)} onClick={(e, values, arrayHelpers) => this.addToSelectedDateList(day, index,   values)}  >{day}</Button>\r\n                            </div>\r\n\r\n                        ))\r\n                    } \r\n            </div>\r\n          </ListItem> </Grid>\r\n  \r\n\r\n          </Grid>\r\n\r\n        </div>\r\n\r\n        <div  className={\" gridParent  border-bottom-gery\"} >\r\n          <Grid container spacing={3} className={\" border-bottom-grey \"}>\r\n\r\n            <Grid item xs={12} sm={6}  className={\" padding-top-0\" } >\r\n            <ListItem   className={\" flexWrapParent \" } > \r\n            <ListItemText primary=\"Time\"   className={\"headerText margin-bottom-ten greyText \"} />\r\n          <div   className={\" flexWrapParent \" } > \r\n            <ListItemText primary=\"7:30\"  className={ \" wrappedListItemTop\"} />\r\n            <ListItemText primary=\" \"   className={\" wrappedListItem  greyText \"} />\r\n            </div>\r\n          </ListItem> </Grid>\r\n            <Grid item xs={12} sm={6} className={  \"alignRight centerAlignContent\"}>\r\n              \r\n            <Button variant=\"outlined\" color=\"primary\" className={classes.button + \" min-width-150 maxWidth150\"}   onClick={e => this.handleDrawerOpenDriver(e )}  >\r\n                      CHANGE TIME\r\n               </Button>\r\n            </Grid>\r\n\r\n          </Grid>\r\n\r\n        </div>\r\n        <div  className={\" gridParent  border-bottom-gery\"} >\r\n          <Grid container spacing={3} className={\" border-bottom-grey \"}>\r\n\r\n            <Grid item xs={12} sm={6}   className={\" padding-top-0\" } >\r\n            <ListItem   className={\" flexWrapParent \" } > \r\n            <ListItemText primary=\"Feeder Team\"   className={\"headerText margin-bottom-ten greyText \"} />\r\n          <div   className={\" flexWrapParent \" } > \r\n            <ListItemText primary=\"Locality\"  className={ \" wrappedListItemTop\"} />\r\n            <ListItemText primary=\"Area\"   className={\" wrappedListItem  greyText \"} />\r\n            </div>\r\n          </ListItem> </Grid>\r\n            <Grid item xs={12} sm={6} className={  \"alignRight centerAlignContent\"}>\r\n              \r\n            <Button variant=\"outlined\" color=\"primary\" className={classes.button + \" min-width-150 maxWidth150\"}   onClick={e => this.handleDrawerOpenDriver(e )}  >\r\n                       ASSIGN DRIVER \r\n               </Button>\r\n            </Grid>\r\n\r\n          </Grid>\r\n\r\n        </div> \r\n        \r\n        <Grid container spacing={3}>\r\n \r\n          <Grid item xs={12} >\r\n            <Paper className={classes.topPaper}>  \r\n  <Button variant=\"contained\" color=\"primary\" className={classes.button} style={{ marginLeft: '10px' }}>\r\n              SAVE\r\n      </Button>\r\n            </Paper>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </Paper>\r\n      { (this.state.openTeam) == true &&   <AssignFeederTeams props={this.state}  handleDrawerTeamClose={this.handleDrawerTeamClose}/>}\r\n       { (this.state.openDriver) == true &&   <AssignDriver props={this.state}  handleDrawerClose={this.handleDrawerClose}/>}\r\n \r\n    </React.Fragment>\r\n  );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)( withRouter(editGreenCluster)); "],"sourceRoot":""}