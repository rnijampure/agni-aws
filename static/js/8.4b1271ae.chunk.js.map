{"version":3,"sources":["innerPages/GreenCluster/greenClusterList.js"],"names":["FormDialog","Loadable","loader","loading","Loading","AssignFeederTeams","GCListlargeScreen","props","handleDrawerOpen","setState","open","handleDrawerClose","setFeederTeamData","data","feederTeamData","console","log","state","setOpen","classes","this","Fragment","className","container","spacing","item","xs","sm","alignLeft","topPaper","join","varient","rootOne","component","aria-label","variant","primary","root","orientation","color","button","onClick","openDriver","React","Component","withStyles","theme","body","backgroundColor","palette","common","white","MuiButton","fontWeight","fontStretch","fontStyle","lineHeight","textAlign","padding","h1","fontSize","marginBottom","paddingBottom","paddingLeft","paddingTop","marginTop","margin","width","maxWidth","display","borderRadius","background","boxShadow","closeButton","position","right","top","grey","Dialog","paper","flexDirection","alignItems","flexWrap","avatar","secondary","main","form","submit","DialogContent","text","border","borderBottom","withRouter"],"mappings":"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","file":"static/js/8.4b1271ae.chunk.js","sourcesContent":["import React from 'react'; \r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { useHistory } from \"react-router-dom\"; \r\nimport { withStyles } from '@material-ui/styles';\r\nimport Loadable  from 'react-loadable'; \r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport { Paper } from '@material-ui/core';  \r\nimport './greenCluster.css';\r\n\r\nimport  AssignDriver  from './assignDiver';\r\nimport {\r\n \r\n  Route, Switch, withRouter\r\n} from \"react-router-dom\"; \r\n\r\n\r\n\r\nconst styles = theme => ({\r\n  '@global': {\r\n    body: {\r\n      backgroundColor: theme.palette.common.white,\r\n      \r\n      \"fontFamily\": \"\\\"Roboto\\\", \\\"Helvetica\\\", \\\"Arial\\\", sans-serif\",\r\n      \r\n      \"fontSize\": 16,\r\n    },\r\n    MuiButton:{\r\n      \"fontSize\": 14,\r\n     \r\n    },\r\n    \".MuiButton-outlinedPrimary\":{\r\n      \"fontSize\": 14,\r\n  fontWeight: '500'  , \r\n  fontStretch: 'normal'  , \r\n  fontStyle: 'normal'  , \r\n  lineHeight: 'normal'  ,  \r\n  textAlign: 'center'  , \r\n  padding:'16px',\r\n  color: '#3a6eff'  , \r\n      \"& span\":{\r\n        \r\n        \"fontSize\": 14,\r\n        }\r\n    },\r\n    h1:{\r\n         fontSize : '24px',\r\n\r\n         \"&.main_heading-text\":{\r\n          color: 'black',\r\n          padding: '16px'  , \r\n           fontSize : '24px',\r\n          textAlign: 'left'  , \r\n          fontWeight: '500'  , \r\n          marginBottom: '0'  ,  \r\n          paddingBottom: '0'  , \r\n          paddingLeft: '0'  , \r\n          paddingTop: '0'  , \r\n    marginTop: '12px'\r\n         }\r\n    },\r\n    \".MuiDivider-root\":{\r\n      backgroundColor: 'rgba(0, 0, 0, 0.14)',\r\n      margin:'0 19px'\r\n    }\r\n  }, \r\n    \r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    backgroundColor: ' ',\r\n    padding: '0',\r\n    display: 'flex',\r\n    \"&:hover\": {\r\n      //you want this to be the same as the backgroundColor above display:'inline-block',\r\n      backgroundColor: \"none\"\r\n    },\r\n    \r\n    \"& .fontSize20 span\":{\r\n      fontSize: '20px'\r\n    },\r\n    \"&:.MuiPaper-rounded\": {\r\n      borderRadius: '8px'\r\n  \r\n    },\r\n  }, \r\n  rootOne: {\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    background: 'none',\r\n    display: 'flex',\r\n    \r\n    margin: theme.spacing(0.5, 0),\r\n    color: '#868686',\r\n     fontSize:'12px!important',\r\n    \"&:hover\": {\r\n      //you want this to be the same as the backgroundColor above display:'inline-block',\r\n      backgroundColor: \"none\"\r\n    },\r\n    boxShadow: 'none',\r\n    \"& li.MuiListItem-root\":{\r\n     \r\n    padding: '0',\r\n    }\r\n\r\n\r\n  },\r\n   closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n  Dialog: {\r\n    maxWidth: '800px'\r\n  },\r\n  paper: {\r\n    marginTop: 0,\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n    textAlign: 'center',\r\n    flexWrap: 'wrap',\r\n    borderRadius: '8px'\r\n\r\n  },\r\n  avatar: {\r\n    margin: theme.spacing(1),\r\n    backgroundColor: theme.palette.secondary.main,\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n    marginTop: theme.spacing(1),\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 5), width: '100%',\r\n  },\r\n  button: {\r\n    margin: theme.spacing(1, 0, 1),\r\n    width: '100%',\r\n    borderRadius: '4px',\r\n    padding: theme.spacing(1, 0, 1),\r\n    \"& span\":{\r\n     fontSize:'14px' \r\n    }\r\n    \r\n  \r\n  },\r\n \r\n    \r\n  DialogContent: {\r\n    flexWrap: 'wrap'\r\n  },\r\n \r\n  \r\n  '& hr': {\r\n    margin: theme.spacing(0, 0.5),\r\n  }, \r\n  alignLeft:{\r\n    textAlign:'left',\r\n       boxShadow:'none'\r\n  },\r\n  paper: {\r\n    width: '100%'\r\n  },\r\n  ListItem: {\r\n    flexWrap: 'wrap',\r\n    \"&:hover\": {\r\n      //you want this to be the same as the backgroundColor above\r\n      backgroundColor: \"none\"\r\n    },\r\n    paddingTop: '0'\r\n  }\r\n  ,\r\n  '& hr': {\r\n    margin: theme.spacing(0, 0.5),\r\n  },\r\n  topPaper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'right',\r\n    color: theme.palette.text.secondary,\r\n    boxShadow: 'none',\r\n    background: 'none'\r\n  }, \r\n\r\n  maxWidth150: {\r\n    maxWidth: '150px'\r\n  }, \r\n    maxWidth30: {\r\n    maxWidth: '30px'\r\n  }, \r\n\r\n  loadMain: {\r\n    marginTop: '0px',\r\n    padding: '0 20px',\r\n    '& paper': {\r\n      boxShadow: 'none',\r\n      borderRadius: '0',\r\n      border: '0',\r\n      borderBottom: '1px solid #f2f2f2'\r\n    }\r\n  } \r\n}) ;\r\n\r\nconst FormDialog = Loadable({\r\n  loader: () => import(\"./createGreenClustersDialog\"),\r\n  loading: Loading  \r\n}); \r\n \r\nfunction Loading() {\r\n  return <h3>Loading...</h3>;\r\n}\r\n  const AssignFeederTeams = Loadable({\r\n      loader: () => import(\"./assignTeam\"),\r\n      loading: Loading  \r\n    });  \r\n    \r\nclass GCListlargeScreen extends React.Component {\r\n  \r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open :false,\r\n      setOpen: false,\r\n      feederTeamData: {},\r\n\r\n }\r\n \r\n  }\r\n   handleDrawerOpen = () => {\r\n    this.setState({ open: true }); \r\n  };\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true }); \r\n  };\r\n   handleDrawerClose = () => { \r\n    this.setState({ open: false });\r\n  }; \r\n  setFeederTeamData = (data) => { \r\n    this.setState({ feederTeamData: data });\r\n   \r\n    console.log(this.state.feederTeamData)\r\n  }; \r\n  render() {\r\n    const { classes } = this.props;\r\n    \r\n  return (\r\n    <React.Fragment>\r\n      <div  className={\" gridParent \"} >\r\n        <Grid container spacing={3}>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <Paper className={[classes.alignLeft ,classes.topPaper].join( ' ')}>\r\n    <h1 className=\"{ main_heading-text }\">        Green Cluster</h1> </Paper>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Paper className={classes.topPaper}>\r\n            <FormDialog   varient=\"outlined\"/></Paper>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </div>\r\n      <Paper className={classes.rootOne}>\r\n        <List component=\"nav\" className={classes.rootOne} aria-label=\"mailbox folders\">\r\n          <ListItem    variant=\"raised\">\r\n            <ListItemText className={ \" headingText \" }  primary=\"Green Cluster\" />\r\n          </ListItem>\r\n          \r\n           \r\n          <ListItem  className={ \" alignCenter \" }>\r\n            <ListItemText className={ \" headingText \" }  primary=\"Feed Team\" />\r\n          </ListItem>\r\n\r\n          <ListItem  className={ \" alignCenter \" } >\r\n            <ListItemText className={ \" headingText \" }  primary=\"Driver\" />\r\n          </ListItem>\r\n          \r\n        </List>\r\n      </Paper>\r\n    \r\n      <Paper className={classes.root}>\r\n        <List component=\"nav\" className={classes.root} aria-label=\"mailbox folders\">\r\n     \r\n          <ListItem   className={\" flexWrapParent \" } > \r\n          <div   className={ \" maxWidth84 \"}>\r\n            <ListItemText  className={ \" fontSize20 \"} primary=\"01\" />\r\n\r\n          </div>\r\n            <Divider orientation=\"vertical\" /> \r\n          <div   className={\" flexWrapParent \" } > \r\n            <ListItemText primary=\"Locality\"  className={ \" wrappedListItemTop\"} />\r\n            <ListItemText primary=\"Area\"   className={\" wrappedListItem  greyText \"} />\r\n            </div>\r\n          </ListItem>\r\n\r\n \r\n          <ListItem    className={ \" alignCenter \" } >\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.button + \" min-width-150 maxWidth150\"}   onClick={this.handleDrawerOpen} >\r\n              ASSIGN TEAM\r\n      </Button>\r\n          </ListItem>\r\n          <ListItem   className={ \" alignCenter \" }  >\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.button + \" min-width-150 maxWidth150\"}  onClick={this.handleDrawerOpen} >\r\n              ASSIGN DRIVER\r\n      </Button>\r\n          </ListItem>\r\n \r\n        </List>\r\n\r\n      </Paper>\r\n      { (this.state.open) == true &&   <AssignFeederTeams open={this.state.open}  setFeederTeamData={() => this.setFeederTeamData} handleDrawerClose={this.handleDrawerClose}/>}\r\n      { (this.state.openDriver) == true &&   <AssignDriver open={this.state.open}  handleDrawerClose={this.handleDrawerClose}/>}\r\n    \r\n    </React.Fragment>\r\n  );\r\n  }\r\n}\r\nexport default withStyles(styles)( withRouter(GCListlargeScreen)); \r\n\r\n//function GCListlargeScreen() {\r\n//   const classes = useStyles();\r\n//   const buttonvarient = \"outlined\";\r\n//   const history = useHistory(); onClick={() => { openAssignFTeamPopUp(history)}}\r\n  \r\n//   var openpopUp = false;\r\n//   function openAssignFTeamPopUp(history){ \r\n//   return openpopUp = true;\r\n\r\n// // history.push(\"/dashboard/Teams/\")\r\n// }\r\n\r\n// }\r\n"],"sourceRoot":""}