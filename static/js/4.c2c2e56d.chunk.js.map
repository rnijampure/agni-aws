{"version":3,"sources":["innerPages/GreenCluster/createGreenClustersDialog.js"],"names":["DialogTitle","withStyles","makeStyles","props","classes","useStyles","children","onClose","other","disableTypography","className","root","variant","aria-label","closeButton","onClick","withRouter","React","useState","open","setOpen","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","handleClose","history","useHistory","id","varient","color","aria-labelledby","initialValues","greenclusterNumber","Locality","onSubmit","values","setSubmitting","alert","JSON","stringify","setTimeout","push","validationSchema","Yup","shape","required","handleChange","handleBlur","handleSubmit","component","maxWidth","paper","form","noValidate","validateOnBlur","validateOnChange","name","render","field","error","Boolean","errors","touched","margin","fullWidth","label","autoComplete","autoFocus","onChange","onBlur","helperText","String","area","kasaragod","state","type","submit","mdUp","button"],"mappings":"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","file":"static/js/4.c2c2e56d.chunk.js","sourcesContent":["import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent'; \r\nimport { withRouter } from 'react-router-dom'\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\nimport { useTheme } from '@material-ui/core/styles';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Formik, Field } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport CssBaseline from '@material-ui/core/CssBaseline'; \r\nimport './greenCluster.css';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {useStyles} from '../../commonStyles';\r\n\r\n \r\n\r\nfunction Loading() {\r\n  return <h3>Loading...</h3>;\r\n}\r\nconst DialogTitle = withStyles(makeStyles)(props => {\r\n\r\n  let classes = useStyles();\r\n  const { children, onClose, ...other } = props;\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nfunction FormDialog(props) {\r\n  const [open, setOpen] = React.useState(false);\r\n  \r\n  const theme = useTheme();\r\n  const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n\r\n\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n\r\n  };\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n  return (\r\n    <div id=\"\">\r\n      <Button variant={props.varient}  color=\"primary\" onClick={handleClickOpen}>\r\n        CREATE GREEN CLUSTER\r\n      </Button>\r\n\r\n\r\n\r\n\r\n      <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\" fullScreen={fullScreen}\r\n      >\r\n        <DialogTitle id=\"create-green-cluster-dialog\"  onClose={handleClose}>Create Green Cluster</DialogTitle>\r\n        <Divider />\r\n        <DialogContent>\r\n\r\n\r\n\r\n\r\n          <Formik\r\n            initialValues={{\r\n              greenclusterNumber: '',\r\n              Locality: '',\r\n\r\n            }}\r\n            onSubmit={(values, { setSubmitting }) => {\r\n              alert(JSON.stringify(values, null, 2));\r\n              setTimeout(() => {\r\n                setOpen(false);\r\n                history.push(\"/dashboard/GreenClusters/\")\r\n\r\n\r\n\r\n                //  setSubmitting(false);\r\n              }, 500);\r\n            }}\r\n\r\n            validationSchema={Yup.object().shape({\r\n              greenclusterNumber: Yup.string()\r\n                .required('Please provide a greencluster number'),\r\n                Locality :  Yup.string()\r\n                .required('Locaity is Mandatory!')\r\n            })}\r\n          >\r\n\r\n            {props => {\r\n              const {\r\n\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n              } = props;\r\n              return (\r\n\r\n                <Container component=\"main\" maxWidth=\"xs\">\r\n                  <CssBaseline />\r\n                  <div className={classes.paper}>\r\n\r\n                    <form className={classes.form} noValidate onSubmit={handleSubmit} >\r\n                      <Field\r\n                        validateOnBlur\r\n                        validateOnChange\r\n                        name=\"greenclusterNumber\"\r\n                        render={({ field, form }) => (\r\n\r\n                          <TextField\r\n                            error={\r\n                              Boolean(form.errors.greenclusterNumber && form.touched.greenclusterNumber)\r\n                            }\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            id=\"greenclusterNumber\"\r\n                            label=\"Create Green Cluster Number\"\r\n                            name=\"greenclusterNumber\"\r\n                            autoComplete=\"greenclusterNumber\"\r\n                            autoFocus\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            helperText={\r\n                              form.errors.greenclusterNumber &&\r\n                              form.touched.greenclusterNumber &&\r\n                              String(form.errors.greenclusterNumber)\r\n                            }\r\n                          />\r\n                        )}\r\n                      />\r\n\r\n                      <Field\r\n                        validateOnBlur\r\n                        validateOnChange\r\n                        name=\"Locality\"\r\n                        render={({ field, form }) => (\r\n                          <TextField\r\n                            error={\r\n                              Boolean(form.errors.Locality && form.touched.Locality)\r\n                            }\r\n                            margin=\"normal\"\r\n                            required\r\n                            fullWidth\r\n                            name=\"Locality\"\r\n                            label=\"Locality\"\r\n                            id=\"Locality\"\r\n                            autoComplete=\"current-Locality\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            helperText={\r\n                              form.errors.Locality &&\r\n                              form.touched.Locality &&\r\n                              String(form.errors.Locality)\r\n                            }\r\n                          />\r\n                        )}\r\n                      />\r\n\r\n                      <Field\r\n                        validateOnBlur\r\n                        validateOnChange\r\n                        name=\"Area\"\r\n                        render={({ field, form }) => (\r\n                          <TextField\r\n                            error={\r\n                              Boolean(form.errors.area && form.touched.area)\r\n                            }\r\n                            margin=\"normal\" \r\n                            fullWidth\r\n                            name=\"Area\"\r\n                            label=\"Area\"\r\n                            id=\"Area\"\r\n                            autoComplete=\"current-area\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            helperText={\r\n                              form.errors.area &&\r\n                              form.touched.area &&\r\n                              String(form.errors.area)\r\n                            }\r\n                          />\r\n                        )}\r\n                      />\r\n\r\n                      <Field\r\n                        validateOnBlur\r\n                        validateOnChange\r\n                        name=\"Kasaragod\"\r\n                        render={({ field, form }) => (\r\n                          <TextField\r\n                            error={\r\n                              Boolean(form.errors.area && form.touched.area)\r\n                            }\r\n                            margin=\"normal\" \r\n                            fullWidth\r\n                            name=\"Kasaragod\"\r\n                            label=\"Kasaragod\"\r\n                            id=\"Kasaragod\"\r\n                            autoComplete=\"current-kasaragod\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            helperText={\r\n                              form.errors.kasaragod &&\r\n                              form.touched.kasaragod &&\r\n                              String(form.errors.kasaragod)\r\n                            }\r\n                          />\r\n                        )}\r\n                      />\r\n                      <Field\r\n                        validateOnBlur\r\n                        validateOnChange\r\n                        name=\"State\"\r\n                        render={({ field, form }) => (\r\n                          <TextField\r\n                            error={\r\n                              Boolean(form.errors.area && form.touched.area)\r\n                            }\r\n                            margin=\"normal\" \r\n                            fullWidth\r\n                            name=\"State\"\r\n                            label=\"State\"\r\n                            id=\"State\"\r\n                            autoComplete=\"current-state\"\r\n                            onChange={handleChange}\r\n                            onBlur={handleBlur}\r\n                            helperText={\r\n                              form.errors.state &&\r\n                              form.touched.state &&\r\n                              String(form.errors.state)\r\n                            }\r\n                          />\r\n                        )}\r\n                      />\r\n\r\n\r\n                      <DialogActions>\r\n\r\n                        <Button\r\n                          type=\"submit\"\r\n                          fullWidth\r\n                          variant=\"contained\"\r\n                          color=\"primary\"\r\n                          className={classes.submit}\r\n                        >\r\n                          CREATE\r\n     </Button>\r\n                        <Hidden mdUp>\r\n                          <Button\r\n                            type=\"button\"\r\n                            fullWidth\r\n                            variant=\"contained\"\r\n                            color=\"secondary\"\r\n                            className={classes.button}\r\n                            onClick={handleClose}\r\n                          >\r\n                            CANCEL\r\n     </Button>\r\n                        </Hidden>\r\n                      </DialogActions>   </form>\r\n                  </div>\r\n                </Container>\r\n              );\r\n            }}\r\n\r\n          </Formik>\r\n        </DialogContent>\r\n\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(FormDialog)"],"sourceRoot":""}