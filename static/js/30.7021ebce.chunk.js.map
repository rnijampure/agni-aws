{"version":3,"sources":["innerPages/team/TeamListSmallScreen.js"],"names":["useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","gridParent","paddingBottom","rootOne","boxShadow","display","padding","button","heightOne","height","marginBottom","alignLeft","textAlign","topPaper","breakpoints","down","margin","marginLeft","wrappedListItem","flex","flexWrapParent","flexWrap","fontWeight","maxWidth150","wrappedListItemTop","TeamListSmallScreen","classes","listItems","map","item","key","className","component","aria-label","variant","primary","Fragment","container","spacing","xs","sm"],"mappings":"qPASMA,EAAYC,aAAW,SAAAC,GAAK,YAAK,CAErCC,KAAM,CACJC,MAAO,OACPC,SAAU,OACVC,gBAAiBJ,EAAMK,QAAQC,WAAWC,OAG5CC,WAAW,CACT,WAAW,CACfJ,gBAAgB,QAGZ,yBAAyB,CACrBK,cAAe,QAIrBC,QAAS,CACPR,MAAO,OACPC,SAAU,OACVQ,UAAU,OAEVC,QAAQ,eACRC,QAAQ,KAEVN,MAAM,CACFL,MAAM,MACNU,QAAQ,gBAEZE,OAAO,CAEL,UAAW,CAEPV,gBAAiB,SAGvBW,UAAU,CACNC,OAAO,MACPC,aAAc,QAGlBC,UAAU,CACRC,UAAU,OACPR,UAAU,OACVP,gBAAiB,eAEtBgB,UAAQ,GACThB,gBAAiB,cAEjBO,UAAU,QAHD,gCAIQ,eAJR,cAMT,WANS,eAQPX,EAAMqB,YAAYC,KAAK,MAAQ,CAC9BpB,MAAO,OAAQqB,OAAQ,OAAWC,WAAY,MAAWP,aAAc,UATjE,GAcRQ,gBAAgB,CACdC,KAAM,WAERC,eAAe,CAEbC,SAAU,OAAW,oBAAoB,CACzC,SAAS,CACPC,WAAW,SAKfC,YAAY,CACV3B,SAAS,SAEX4B,mBAAmB,CACjBF,WAAW,MACVH,KAAM,eAII,SAASM,IACtB,IAAMC,EAAUnC,IAEVoC,EADW,CAAC,EAAG,EAAG,GACGC,KAAI,SAAUC,GACvC,OAEE,yBAAKC,IAAKD,GAGV,kBAAC,IAAD,CAAOE,UAAWL,EAAQvB,SACxB,kBAAC,IAAD,CAAM6B,UAAU,MAAMD,UAAWL,EAAQvB,QAAS8B,aAAW,mBAC3D,kBAAC,IAAD,CAAWC,QAAQ,UACjB,kBAAC,IAAD,CAAcH,UAAWL,EAAQH,YAAaY,QAAQ,sBACtD,kBAAC,IAAD,CAAeJ,UAAY,gBAAmBI,QAAQ,QAGhE,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAcJ,UAAWL,EAAQH,YAAaY,QAAQ,aACtD,yBAAKJ,UAAWL,EAAQN,gBAC1B,kBAAC,IAAD,CAAce,QAAQ,aAAcJ,UAAY,yBAChD,kBAAC,IAAD,CAAcI,QAAQ,YAAcJ,UAAW,wBAGrC,kBAAC,IAAD,CAAcG,QAAQ,UACpB,kBAAC,IAAD,CAAcH,UAAWL,EAAQH,YAAcY,QAAQ,gBACvD,kBAAC,IAAD,CAAeJ,UAAY,gBAAoBI,QAAQ,QAEzD,kBAAC,IAAD,CAAYD,QAAQ,UAClB,kBAAC,IAAD,CAAcH,UAAWL,EAAQH,YAAaY,QAAQ,kBACtD,yBAAKJ,UAAWL,EAAQN,gBACpC,kBAAC,IAAD,CAAce,QAAQ,KAAMJ,UAAY,yBACxC,kBAAC,IAAD,CAAcI,QAAQ,kBAAoBJ,UAAW,wBAI3C,kBAAC,IAAD,CAAYG,QAAQ,UAClB,kBAAC,IAAD,CAAcH,UAAWL,EAAQH,YAAaY,QAAQ,oBACtD,kBAAC,IAAD,CAAcA,QAAQ,qBAExB,kBAAC,IAAD,CAAYD,QAAQ,UAElB,kBAAC,IAAD,CAAcH,UAAWL,EAAQH,YAAaY,QAAQ,gBACtD,kBAAC,IAAD,CAAcA,QAAQ,SAM1B,yBAAMJ,UAAW,eAAjB,YAMN,OACE,kBAAC,IAAMK,SAAP,KACE,yBAAML,UAAW,gBACf,kBAAC,IAAD,CAAMM,WAAS,EAACC,QAAS,GAEvB,kBAAC,IAAD,CAAMT,MAAI,EAACU,GAAI,GAAIC,GAAI,GACrB,kBAAC,IAAD,CAAOT,UAAWL,EAAQf,WAA1B,KAAwC,wBAAIoB,UAAU,yBAAd,kBAE1C,kBAAC,IAAD,CAAMF,MAAI,EAACU,GAAI,GAAIC,GAAI,GACrB,kBAAC,IAAD,CAAOT,UAAWL,EAAQb,cAMlCc","file":"static/js/30.7021ebce.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText'; \r\n\r\nimport Grid from '@material-ui/core/Grid'; \r\n  \r\nimport { Paper } from '@material-ui/core';   \r\nconst useStyles = makeStyles(theme => ({\r\n\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n   \r\n  },\r\n  gridParent:{\r\n    \"& paper:\":{\r\nbackgroundColor:'none',\r\n      \r\n    },\r\n    \"& h1.main_heading-text\":{\r\n        paddingBottom: '0px'\r\n      }\r\n      \r\n  },\r\n  rootOne: {\r\n    width: '100%',\r\n    maxWidth: '100%', \r\n    boxShadow:'none',\r\n    \r\n    display:'inline-block',\r\n    padding:'0'\r\n  },\r\n  paper:{\r\n      width:'50%',\r\n      display:'inline-block'\r\n  } ,\r\n  button:{\r\n  \r\n    \"&:hover\": {\r\n        //you want this to be the same as the backgroundColor above\r\n        backgroundColor: \"none\"\r\n    } \r\n  },\r\n  heightOne:{\r\n      height:'1px',\r\n      marginBottom: '15px'\r\n  },\r\n  \r\n  alignLeft:{\r\n    textAlign:'left',\r\n       boxShadow:'none',\r\n       backgroundColor: 'transparent'\r\n  },\r\n  topPaper:{\r\n backgroundColor: 'transparent',\r\n \r\n boxShadow:'none',\r\n backgroundColor: 'transparent',\r\n\r\n \"& button\":{\r\n  \r\n  [theme.breakpoints.down('sm')]: {\r\n    width: '100%', margin: '10px',    marginLeft: '0px' ,    marginBottom: '30px',\r\n  },\r\n }\r\n \r\n  },\r\n  wrappedListItem:{\r\n    flex: '0 0 53%'\r\n  },\r\n  flexWrapParent:{\r\n\r\n    flexWrap: 'wrap',    \"& :first-of-type \":{\r\n    \"& span\":{ \r\n      fontWeight:'700', \r\n   \r\n    }\r\n  }\r\n  },\r\n  maxWidth150:{\r\n    maxWidth:'130px'\r\n  },\r\n  wrappedListItemTop:{\r\n    fontWeight:'700',\r\n     flex: '0 0 53%'\r\n  } \r\n}));\r\n\r\nexport default function TeamListSmallScreen() {\r\n  const classes = useStyles();\r\n  const teamList = [1, 2, 3];\r\n  const listItems = teamList.map(function (item) {\r\n    return (\r\n\r\n      <div key={item}>\r\n\r\n\r\n      <Paper className={classes.rootOne}>\r\n        <List component=\"nav\" className={classes.rootOne} aria-label=\"mailbox folders\">\r\n          <ListItem  variant=\"raised\">\r\n            <ListItemText className={classes.maxWidth150} primary=\"Green Cluster Id:\" />\r\n            <ListItemText  className={ \" headingText \" }  primary=\"01\" />\r\n        \r\n          </ListItem>\r\n  <ListItem   > \r\n  <ListItemText className={classes.maxWidth150} primary=\"Location\" />\r\n  <div className={classes.flexWrapParent}>\r\n<ListItemText primary=\"Indranagar\"  className={ \" wrappedListItemTop \"} />\r\n<ListItemText primary=\"1st Block\"   className={\" wrappedListItem \"} />\r\n</div>\r\n</ListItem>\r\n          <ListItem     variant=\"raised\">\r\n            <ListItemText className={classes.maxWidth150}  primary=\"Team Number\" />\r\n            <ListItemText  className={ \" headingText \" }   primary=\"01\" />\r\n          </ListItem>\r\n          <ListItem   variant=\"raised\">\r\n            <ListItemText className={classes.maxWidth150} primary=\"Total Feeders\" />\r\n            <div className={classes.flexWrapParent}>\r\n<ListItemText primary=\"08\"  className={ \" wrappedListItemTop \"} />\r\n<ListItemText primary=\"Hansika Motvani\"   className={\" wrappedListItem \"} />\r\n</div>\r\n          </ListItem>\r\n\r\n          <ListItem   variant=\"raised\">\r\n            <ListItemText className={classes.maxWidth150} primary=\"Collection Days\" />\r\n            <ListItemText primary=\"  Mon, Wed, Fri\" />\r\n          </ListItem>\r\n          <ListItem   variant=\"raised\">\r\n\r\n            <ListItemText className={classes.maxWidth150} primary=\"Repeat Days\" />\r\n            <ListItemText primary=\"0\" />\r\n          </ListItem>\r\n        </List>\r\n      </Paper>\r\n    \r\n\r\n        <div  className={\" heightOne \"} >\r\n          &nbsp;\r\n    </div>\r\n      </div>\r\n    );\r\n  })\r\n  return (\r\n    <React.Fragment>\r\n      <div  className={\" gridParent \"} >\r\n        <Grid container spacing={3}>\r\n\r\n          <Grid item xs={12} sm={6}>\r\n            <Paper className={classes.alignLeft }>  <h1 className=\"{ main_heading-text }\">     Request</h1></Paper>\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            <Paper className={classes.topPaper}>\r\n            </Paper>\r\n          </Grid>\r\n\r\n        </Grid>\r\n      </div>\r\n   {listItems}\r\n    </React.Fragment>\r\n   );\r\n}\r\n"],"sourceRoot":""}